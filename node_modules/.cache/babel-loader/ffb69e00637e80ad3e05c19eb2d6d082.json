{"ast":null,"code":"import { __values, __spreadArray, __read, __assign } from './_virtual/_tslib.js';\nimport { ActionTypes, SpecialTargets } from './types.js';\nimport { isStateConfig, State, bindActionToState } from './State.js';\nimport { errorPlatform, log, stop, start, cancel, send, update, error as error$1 } from './actionTypes.js';\nimport { doneInvoke, initEvent, getActionFunction, error } from './actions.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { warn, mapContext, isFunction, toSCXMLEvent, toInvokeSource, isMachine, isPromiseLike, isObservable, isBehavior, reportUnhandledExceptionOnInvocation, symbolObservable, isArray, toEventObject, isString, isActor, uniqueId, toObserver } from './utils.js';\nimport { Scheduler } from './scheduler.js';\nimport { isSpawnedActor, createDeferredActor } from './Actor.js';\nimport { isInFinalState } from './stateUtils.js';\nimport { registry } from './registry.js';\nimport { getGlobal, registerService } from './devTools.js';\nimport { provide, consume } from './serviceScope.js';\nimport { spawnBehavior } from './behaviors.js';\nvar DEFAULT_SPAWN_OPTIONS = {\n  sync: false,\n  autoForward: false\n};\nvar InterpreterStatus;\n\n(function (InterpreterStatus) {\n  InterpreterStatus[InterpreterStatus[\"NotStarted\"] = 0] = \"NotStarted\";\n  InterpreterStatus[InterpreterStatus[\"Running\"] = 1] = \"Running\";\n  InterpreterStatus[InterpreterStatus[\"Stopped\"] = 2] = \"Stopped\";\n})(InterpreterStatus || (InterpreterStatus = {}));\n\nvar Interpreter =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new Interpreter instance (i.e., service) for the given machine with the provided options, if any.\r\n   *\r\n   * @param machine The machine to be interpreted\r\n   * @param options Interpreter options\r\n   */\n  function Interpreter(machine, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = Interpreter.defaultOptions;\n    }\n\n    this.machine = machine;\n    this.delayedEventsMap = {};\n    this.listeners = new Set();\n    this.contextListeners = new Set();\n    this.stopListeners = new Set();\n    this.doneListeners = new Set();\n    this.eventListeners = new Set();\n    this.sendListeners = new Set();\n    /**\r\n     * Whether the service is started.\r\n     */\n\n    this.initialized = false;\n    this.status = InterpreterStatus.NotStarted;\n    this.children = new Map();\n    this.forwardTo = new Set();\n    /**\r\n     * Alias for Interpreter.prototype.start\r\n     */\n\n    this.init = this.start;\n    /**\r\n     * Sends an event to the running interpreter to trigger a transition.\r\n     *\r\n     * An array of events (batched) can be sent as well, which will send all\r\n     * batched events to the running interpreter. The listeners will be\r\n     * notified only **once** when all events are processed.\r\n     *\r\n     * @param event The event(s) to send\r\n     */\n\n    this.send = function (event, payload) {\n      if (isArray(event)) {\n        _this.batch(event);\n\n        return _this.state;\n      }\n\n      var _event = toSCXMLEvent(toEventObject(event, payload));\n\n      if (_this.status === InterpreterStatus.Stopped) {\n        // do nothing\n        if (!IS_PRODUCTION) {\n          warn(false, \"Event \\\"\".concat(_event.name, \"\\\" was sent to stopped service \\\"\").concat(_this.machine.id, \"\\\". This service has already reached its final state, and will not transition.\\nEvent: \").concat(JSON.stringify(_event.data)));\n        }\n\n        return _this.state;\n      }\n\n      if (_this.status !== InterpreterStatus.Running && !_this.options.deferEvents) {\n        throw new Error(\"Event \\\"\".concat(_event.name, \"\\\" was sent to uninitialized service \\\"\").concat(_this.machine.id // tslint:disable-next-line:max-line-length\n        , \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\\nEvent: \").concat(JSON.stringify(_event.data)));\n      }\n\n      _this.scheduler.schedule(function () {\n        // Forward copy of event to child actors\n        _this.forward(_event);\n\n        var nextState = _this.nextState(_event);\n\n        _this.update(nextState, _event);\n      });\n\n      return _this._state; // TODO: deprecate (should return void)\n      // tslint:disable-next-line:semicolon\n    };\n\n    this.sendTo = function (event, to) {\n      var isParent = _this.parent && (to === SpecialTargets.Parent || _this.parent.id === to);\n      var target = isParent ? _this.parent : isString(to) ? _this.children.get(to) || registry.get(to) : isActor(to) ? to : undefined;\n\n      if (!target) {\n        if (!isParent) {\n          throw new Error(\"Unable to send event to child '\".concat(to, \"' from service '\").concat(_this.id, \"'.\"));\n        } // tslint:disable-next-line:no-console\n\n\n        if (!IS_PRODUCTION) {\n          warn(false, \"Service '\".concat(_this.id, \"' has no parent: unable to send event \").concat(event.type));\n        }\n\n        return;\n      }\n\n      if ('machine' in target) {\n        // Send SCXML events to machines\n        target.send(__assign(__assign({}, event), {\n          name: event.name === error$1 ? \"\".concat(error(_this.id)) : event.name,\n          origin: _this.sessionId\n        }));\n      } else {\n        // Send normal events to other targets\n        target.send(event.data);\n      }\n    };\n\n    var resolvedOptions = __assign(__assign({}, Interpreter.defaultOptions), options);\n\n    var clock = resolvedOptions.clock,\n        logger = resolvedOptions.logger,\n        parent = resolvedOptions.parent,\n        id = resolvedOptions.id;\n    var resolvedId = id !== undefined ? id : machine.id;\n    this.id = resolvedId;\n    this.logger = logger;\n    this.clock = clock;\n    this.parent = parent;\n    this.options = resolvedOptions;\n    this.scheduler = new Scheduler({\n      deferEvents: this.options.deferEvents\n    });\n    this.sessionId = registry.bookId();\n  }\n\n  Object.defineProperty(Interpreter.prototype, \"initialState\", {\n    get: function get() {\n      var _this = this;\n\n      if (this._initialState) {\n        return this._initialState;\n      }\n\n      return provide(this, function () {\n        _this._initialState = _this.machine.initialState;\n        return _this._initialState;\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Interpreter.prototype, \"state\", {\n    get: function get() {\n      if (!IS_PRODUCTION) {\n        warn(this.status !== InterpreterStatus.NotStarted, \"Attempted to read state from uninitialized service '\".concat(this.id, \"'. Make sure the service is started first.\"));\n      }\n\n      return this._state;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Executes the actions of the given state, with that state's `context` and `event`.\r\n   *\r\n   * @param state The state whose actions will be executed\r\n   * @param actionsConfig The action implementations to use\r\n   */\n\n  Interpreter.prototype.execute = function (state, actionsConfig) {\n    var e_1, _a;\n\n    try {\n      for (var _b = __values(state.actions), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var action = _c.value;\n        this.exec(action, state, actionsConfig);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.update = function (state, _event) {\n    var e_2, _a, e_3, _b, e_4, _c, e_5, _d;\n\n    var _this = this; // Attach session ID to state\n\n\n    state._sessionid = this.sessionId; // Update state\n\n    this._state = state; // Execute actions\n\n    if (this.options.execute) {\n      this.execute(this.state);\n    } // Update children\n\n\n    this.children.forEach(function (child) {\n      _this.state.children[child.id] = child;\n    }); // Dev tools\n\n    if (this.devTools) {\n      this.devTools.send(_event.data, state);\n    } // Execute listeners\n\n\n    if (state.event) {\n      try {\n        for (var _e = __values(this.eventListeners), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var listener = _f.value;\n          listener(state.event);\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n\n    try {\n      for (var _g = __values(this.listeners), _h = _g.next(); !_h.done; _h = _g.next()) {\n        var listener = _h.value;\n        listener(state, state.event);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    try {\n      for (var _j = __values(this.contextListeners), _k = _j.next(); !_k.done; _k = _j.next()) {\n        var contextListener = _k.value;\n        contextListener(this.state.context, this.state.history ? this.state.history.context : undefined);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_k && !_k.done && (_c = _j.return)) _c.call(_j);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    var isDone = isInFinalState(state.configuration || [], this.machine);\n\n    if (this.state.configuration && isDone) {\n      // get final child state node\n      var finalChildStateNode = state.configuration.find(function (sn) {\n        return sn.type === 'final' && sn.parent === _this.machine;\n      });\n      var doneData = finalChildStateNode && finalChildStateNode.doneData ? mapContext(finalChildStateNode.doneData, state.context, _event) : undefined;\n\n      try {\n        for (var _l = __values(this.doneListeners), _m = _l.next(); !_m.done; _m = _l.next()) {\n          var listener = _m.value;\n          listener(doneInvoke(this.id, doneData));\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_m && !_m.done && (_d = _l.return)) _d.call(_l);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n\n      this.stop();\n    }\n  };\n  /*\r\n   * Adds a listener that is notified whenever a state transition happens. The listener is called with\r\n   * the next state and the event object that caused the state transition.\r\n   *\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onTransition = function (listener) {\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this.status === InterpreterStatus.Running) {\n      listener(this.state, this.state.event);\n    }\n\n    return this;\n  };\n\n  Interpreter.prototype.subscribe = function (nextListenerOrObserver, _, // TODO: error listener\n  completeListener) {\n    var _this = this;\n\n    if (!nextListenerOrObserver) {\n      return {\n        unsubscribe: function unsubscribe() {\n          return void 0;\n        }\n      };\n    }\n\n    var listener;\n    var resolvedCompleteListener = completeListener;\n\n    if (typeof nextListenerOrObserver === 'function') {\n      listener = nextListenerOrObserver;\n    } else {\n      listener = nextListenerOrObserver.next.bind(nextListenerOrObserver);\n      resolvedCompleteListener = nextListenerOrObserver.complete.bind(nextListenerOrObserver);\n    }\n\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this.status !== InterpreterStatus.NotStarted) {\n      listener(this.state);\n    }\n\n    if (resolvedCompleteListener) {\n      if (this.status === InterpreterStatus.Stopped) {\n        resolvedCompleteListener();\n      } else {\n        this.onDone(resolvedCompleteListener);\n      }\n    }\n\n    return {\n      unsubscribe: function unsubscribe() {\n        listener && _this.listeners.delete(listener);\n        resolvedCompleteListener && _this.doneListeners.delete(resolvedCompleteListener);\n      }\n    };\n  };\n  /**\r\n   * Adds an event listener that is notified whenever an event is sent to the running interpreter.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onEvent = function (listener) {\n    this.eventListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds an event listener that is notified whenever a `send` event occurs.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onSend = function (listener) {\n    this.sendListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a context listener that is notified whenever the state context changes.\r\n   * @param listener The context listener\r\n   */\n\n\n  Interpreter.prototype.onChange = function (listener) {\n    this.contextListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a listener that is notified when the machine is stopped.\r\n   * @param listener The listener\r\n   */\n\n\n  Interpreter.prototype.onStop = function (listener) {\n    this.stopListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a state listener that is notified when the statechart has reached its final state.\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onDone = function (listener) {\n    this.doneListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Removes a listener.\r\n   * @param listener The listener to remove\r\n   */\n\n\n  Interpreter.prototype.off = function (listener) {\n    this.listeners.delete(listener);\n    this.eventListeners.delete(listener);\n    this.sendListeners.delete(listener);\n    this.stopListeners.delete(listener);\n    this.doneListeners.delete(listener);\n    this.contextListeners.delete(listener);\n    return this;\n  };\n  /**\r\n   * Starts the interpreter from the given state, or the initial state.\r\n   * @param initialState The state to start the statechart from\r\n   */\n\n\n  Interpreter.prototype.start = function (initialState) {\n    var _this = this;\n\n    if (this.status === InterpreterStatus.Running) {\n      // Do not restart the service if it is already started\n      return this;\n    } // yes, it's a hack but we need the related cache to be populated for some things to work (like delayed transitions)\n    // this is usually called by `machine.getInitialState` but if we rehydrate from a state we might bypass this call\n    // we also don't want to call this method here as it resolves the full initial state which might involve calling assign actions\n    // and that could potentially lead to some unwanted side-effects (even such as creating some rogue actors)\n\n\n    this.machine._init();\n\n    registry.register(this.sessionId, this);\n    this.initialized = true;\n    this.status = InterpreterStatus.Running;\n    var resolvedState = initialState === undefined ? this.initialState : provide(this, function () {\n      return isStateConfig(initialState) ? _this.machine.resolveState(initialState) : _this.machine.resolveState(State.from(initialState, _this.machine.context));\n    });\n\n    if (this.options.devTools) {\n      this.attachDev();\n    }\n\n    this.scheduler.initialize(function () {\n      _this.update(resolvedState, initEvent);\n    });\n    return this;\n  };\n  /**\r\n   * Stops the interpreter and unsubscribe all listeners.\r\n   *\r\n   * This will also notify the `onStop` listeners.\r\n   */\n\n\n  Interpreter.prototype.stop = function () {\n    var e_6, _a, e_7, _b, e_8, _c, e_9, _d, e_10, _e;\n\n    var _this = this;\n\n    try {\n      for (var _f = __values(this.listeners), _g = _f.next(); !_g.done; _g = _f.next()) {\n        var listener = _g.value;\n        this.listeners.delete(listener);\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (_g && !_g.done && (_a = _f.return)) _a.call(_f);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    try {\n      for (var _h = __values(this.stopListeners), _j = _h.next(); !_j.done; _j = _h.next()) {\n        var listener = _j.value; // call listener, then remove\n\n        listener();\n        this.stopListeners.delete(listener);\n      }\n    } catch (e_7_1) {\n      e_7 = {\n        error: e_7_1\n      };\n    } finally {\n      try {\n        if (_j && !_j.done && (_b = _h.return)) _b.call(_h);\n      } finally {\n        if (e_7) throw e_7.error;\n      }\n    }\n\n    try {\n      for (var _k = __values(this.contextListeners), _l = _k.next(); !_l.done; _l = _k.next()) {\n        var listener = _l.value;\n        this.contextListeners.delete(listener);\n      }\n    } catch (e_8_1) {\n      e_8 = {\n        error: e_8_1\n      };\n    } finally {\n      try {\n        if (_l && !_l.done && (_c = _k.return)) _c.call(_k);\n      } finally {\n        if (e_8) throw e_8.error;\n      }\n    }\n\n    try {\n      for (var _m = __values(this.doneListeners), _o = _m.next(); !_o.done; _o = _m.next()) {\n        var listener = _o.value;\n        this.doneListeners.delete(listener);\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (_o && !_o.done && (_d = _m.return)) _d.call(_m);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    }\n\n    if (!this.initialized) {\n      // Interpreter already stopped; do nothing\n      return this;\n    }\n\n    __spreadArray([], __read(this.state.configuration), false).sort(function (a, b) {\n      return b.order - a.order;\n    }).forEach(function (stateNode) {\n      var e_11, _a;\n\n      try {\n        for (var _b = __values(stateNode.definition.exit), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var action = _c.value;\n\n          _this.exec(action, _this.state);\n        }\n      } catch (e_11_1) {\n        e_11 = {\n          error: e_11_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_11) throw e_11.error;\n        }\n      }\n    }); // Stop all children\n\n\n    this.children.forEach(function (child) {\n      if (isFunction(child.stop)) {\n        child.stop();\n      }\n    });\n    this.children.clear();\n\n    try {\n      // Cancel all delayed events\n      for (var _p = __values(Object.keys(this.delayedEventsMap)), _q = _p.next(); !_q.done; _q = _p.next()) {\n        var key = _q.value;\n        this.clock.clearTimeout(this.delayedEventsMap[key]);\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (_q && !_q.done && (_e = _p.return)) _e.call(_p);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    }\n\n    this.scheduler.clear();\n    this.scheduler = new Scheduler({\n      deferEvents: this.options.deferEvents\n    });\n    this.initialized = false;\n    this.status = InterpreterStatus.Stopped;\n    this._initialState = undefined;\n    registry.free(this.sessionId);\n    return this;\n  };\n\n  Interpreter.prototype.batch = function (events) {\n    var _this = this;\n\n    if (this.status === InterpreterStatus.NotStarted && this.options.deferEvents) {\n      // tslint:disable-next-line:no-console\n      if (!IS_PRODUCTION) {\n        warn(false, \"\".concat(events.length, \" event(s) were sent to uninitialized service \\\"\").concat(this.machine.id, \"\\\" and are deferred. Make sure .start() is called for this service.\\nEvent: \").concat(JSON.stringify(event)));\n      }\n    } else if (this.status !== InterpreterStatus.Running) {\n      throw new Error( // tslint:disable-next-line:max-line-length\n      \"\".concat(events.length, \" event(s) were sent to uninitialized service \\\"\").concat(this.machine.id, \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\"));\n    }\n\n    this.scheduler.schedule(function () {\n      var e_12, _a;\n\n      var nextState = _this.state;\n      var batchChanged = false;\n      var batchedActions = [];\n\n      var _loop_1 = function _loop_1(event_1) {\n        var _event = toSCXMLEvent(event_1);\n\n        _this.forward(_event);\n\n        nextState = provide(_this, function () {\n          return _this.machine.transition(nextState, _event);\n        });\n        batchedActions.push.apply(batchedActions, __spreadArray([], __read(nextState.actions.map(function (a) {\n          return bindActionToState(a, nextState);\n        })), false));\n        batchChanged = batchChanged || !!nextState.changed;\n      };\n\n      try {\n        for (var events_1 = __values(events), events_1_1 = events_1.next(); !events_1_1.done; events_1_1 = events_1.next()) {\n          var event_1 = events_1_1.value;\n\n          _loop_1(event_1);\n        }\n      } catch (e_12_1) {\n        e_12 = {\n          error: e_12_1\n        };\n      } finally {\n        try {\n          if (events_1_1 && !events_1_1.done && (_a = events_1.return)) _a.call(events_1);\n        } finally {\n          if (e_12) throw e_12.error;\n        }\n      }\n\n      nextState.changed = batchChanged;\n      nextState.actions = batchedActions;\n\n      _this.update(nextState, toSCXMLEvent(events[events.length - 1]));\n    });\n  };\n  /**\r\n   * Returns a send function bound to this interpreter instance.\r\n   *\r\n   * @param event The event to be sent by the sender.\r\n   */\n\n\n  Interpreter.prototype.sender = function (event) {\n    return this.send.bind(this, event);\n  };\n  /**\r\n   * Returns the next state given the interpreter's current state and the event.\r\n   *\r\n   * This is a pure method that does _not_ update the interpreter's state.\r\n   *\r\n   * @param event The event to determine the next state\r\n   */\n\n\n  Interpreter.prototype.nextState = function (event) {\n    var _this = this;\n\n    var _event = toSCXMLEvent(event);\n\n    if (_event.name.indexOf(errorPlatform) === 0 && !this.state.nextEvents.some(function (nextEvent) {\n      return nextEvent.indexOf(errorPlatform) === 0;\n    })) {\n      throw _event.data.data;\n    }\n\n    var nextState = provide(this, function () {\n      return _this.machine.transition(_this.state, _event);\n    });\n    return nextState;\n  };\n\n  Interpreter.prototype.forward = function (event) {\n    var e_13, _a;\n\n    try {\n      for (var _b = __values(this.forwardTo), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var id = _c.value;\n        var child = this.children.get(id);\n\n        if (!child) {\n          throw new Error(\"Unable to forward event '\".concat(event, \"' from interpreter '\").concat(this.id, \"' to nonexistant child '\").concat(id, \"'.\"));\n        }\n\n        child.send(event);\n      }\n    } catch (e_13_1) {\n      e_13 = {\n        error: e_13_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_13) throw e_13.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.defer = function (sendAction) {\n    var _this = this;\n\n    this.delayedEventsMap[sendAction.id] = this.clock.setTimeout(function () {\n      if (sendAction.to) {\n        _this.sendTo(sendAction._event, sendAction.to);\n      } else {\n        _this.send(sendAction._event);\n      }\n    }, sendAction.delay);\n  };\n\n  Interpreter.prototype.cancel = function (sendId) {\n    this.clock.clearTimeout(this.delayedEventsMap[sendId]);\n    delete this.delayedEventsMap[sendId];\n  };\n\n  Interpreter.prototype.exec = function (action, state, actionFunctionMap) {\n    if (actionFunctionMap === void 0) {\n      actionFunctionMap = this.machine.options.actions;\n    }\n\n    var context = state.context,\n        _event = state._event;\n    var actionOrExec = action.exec || getActionFunction(action.type, actionFunctionMap);\n    var exec = isFunction(actionOrExec) ? actionOrExec : actionOrExec ? actionOrExec.exec : action.exec;\n\n    if (exec) {\n      try {\n        return exec(context, _event.data, {\n          action: action,\n          state: this.state,\n          _event: _event\n        });\n      } catch (err) {\n        if (this.parent) {\n          this.parent.send({\n            type: 'xstate.error',\n            data: err\n          });\n        }\n\n        throw err;\n      }\n    }\n\n    switch (action.type) {\n      case send:\n        var sendAction = action;\n\n        if (typeof sendAction.delay === 'number') {\n          this.defer(sendAction);\n          return;\n        } else {\n          if (sendAction.to) {\n            this.sendTo(sendAction._event, sendAction.to);\n          } else {\n            this.send(sendAction._event);\n          }\n        }\n\n        break;\n\n      case cancel:\n        this.cancel(action.sendId);\n        break;\n\n      case start:\n        {\n          if (this.status !== InterpreterStatus.Running) {\n            return;\n          }\n\n          var activity = action.activity; // If the activity will be stopped right after it's started\n          // (such as in transient states)\n          // don't bother starting the activity.\n\n          if (!this.state.activities[activity.id || activity.type]) {\n            break;\n          } // Invoked services\n\n\n          if (activity.type === ActionTypes.Invoke) {\n            var invokeSource = toInvokeSource(activity.src);\n            var serviceCreator = this.machine.options.services ? this.machine.options.services[invokeSource.type] : undefined;\n            var id = activity.id,\n                data = activity.data;\n\n            if (!IS_PRODUCTION) {\n              warn(!('forward' in activity), // tslint:disable-next-line:max-line-length\n              \"`forward` property is deprecated (found in invocation of '\".concat(activity.src, \"' in in machine '\").concat(this.machine.id, \"'). \") + \"Please use `autoForward` instead.\");\n            }\n\n            var autoForward = 'autoForward' in activity ? activity.autoForward : !!activity.forward;\n\n            if (!serviceCreator) {\n              // tslint:disable-next-line:no-console\n              if (!IS_PRODUCTION) {\n                warn(false, \"No service found for invocation '\".concat(activity.src, \"' in machine '\").concat(this.machine.id, \"'.\"));\n              }\n\n              return;\n            }\n\n            var resolvedData = data ? mapContext(data, context, _event) : undefined;\n\n            if (typeof serviceCreator === 'string') {\n              // TODO: warn\n              return;\n            }\n\n            var source = isFunction(serviceCreator) ? serviceCreator(context, _event.data, {\n              data: resolvedData,\n              src: invokeSource,\n              meta: activity.meta\n            }) : serviceCreator;\n\n            if (!source) {\n              // TODO: warn?\n              return;\n            }\n\n            var options = void 0;\n\n            if (isMachine(source)) {\n              source = resolvedData ? source.withContext(resolvedData) : source;\n              options = {\n                autoForward: autoForward\n              };\n            }\n\n            this.spawn(source, id, options);\n          } else {\n            this.spawnActivity(activity);\n          }\n\n          break;\n        }\n\n      case stop:\n        {\n          this.stopChild(action.activity.id);\n          break;\n        }\n\n      case log:\n        var label = action.label,\n            value = action.value;\n\n        if (label) {\n          this.logger(label, value);\n        } else {\n          this.logger(value);\n        }\n\n        break;\n\n      default:\n        if (!IS_PRODUCTION) {\n          warn(false, \"No implementation found for action type '\".concat(action.type, \"'\"));\n        }\n\n        break;\n    }\n\n    return undefined;\n  };\n\n  Interpreter.prototype.removeChild = function (childId) {\n    var _a;\n\n    this.children.delete(childId);\n    this.forwardTo.delete(childId); // this.state might not exist at the time this is called,\n    // such as when a child is added then removed while initializing the state\n\n    (_a = this.state) === null || _a === void 0 ? true : delete _a.children[childId];\n  };\n\n  Interpreter.prototype.stopChild = function (childId) {\n    var child = this.children.get(childId);\n\n    if (!child) {\n      return;\n    }\n\n    this.removeChild(childId);\n\n    if (isFunction(child.stop)) {\n      child.stop();\n    }\n  };\n\n  Interpreter.prototype.spawn = function (entity, name, options) {\n    if (isPromiseLike(entity)) {\n      return this.spawnPromise(Promise.resolve(entity), name);\n    } else if (isFunction(entity)) {\n      return this.spawnCallback(entity, name);\n    } else if (isSpawnedActor(entity)) {\n      return this.spawnActor(entity, name);\n    } else if (isObservable(entity)) {\n      return this.spawnObservable(entity, name);\n    } else if (isMachine(entity)) {\n      return this.spawnMachine(entity, __assign(__assign({}, options), {\n        id: name\n      }));\n    } else if (isBehavior(entity)) {\n      return this.spawnBehavior(entity, name);\n    } else {\n      throw new Error(\"Unable to spawn entity \\\"\".concat(name, \"\\\" of type \\\"\").concat(typeof entity, \"\\\".\"));\n    }\n  };\n\n  Interpreter.prototype.spawnMachine = function (machine, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var childService = new Interpreter(machine, __assign(__assign({}, this.options), {\n      parent: this,\n      id: options.id || machine.id\n    }));\n\n    var resolvedOptions = __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), options);\n\n    if (resolvedOptions.sync) {\n      childService.onTransition(function (state) {\n        _this.send(update, {\n          state: state,\n          id: childService.id\n        });\n      });\n    }\n\n    var actor = childService;\n    this.children.set(childService.id, actor);\n\n    if (resolvedOptions.autoForward) {\n      this.forwardTo.add(childService.id);\n    }\n\n    childService.onDone(function (doneEvent) {\n      _this.removeChild(childService.id);\n\n      _this.send(toSCXMLEvent(doneEvent, {\n        origin: childService.id\n      }));\n    }).start();\n    return actor;\n  };\n\n  Interpreter.prototype.spawnBehavior = function (behavior, id) {\n    var actorRef = spawnBehavior(behavior, {\n      id: id,\n      parent: this\n    });\n    this.children.set(id, actorRef);\n    return actorRef;\n  };\n\n  Interpreter.prototype.spawnPromise = function (promise, id) {\n    var _a;\n\n    var _this = this;\n\n    var canceled = false;\n    var resolvedData;\n    promise.then(function (response) {\n      if (!canceled) {\n        resolvedData = response;\n\n        _this.removeChild(id);\n\n        _this.send(toSCXMLEvent(doneInvoke(id, response), {\n          origin: id\n        }));\n      }\n    }, function (errorData) {\n      if (!canceled) {\n        _this.removeChild(id);\n\n        var errorEvent = error(id, errorData);\n\n        try {\n          // Send \"error.platform.id\" to this (parent).\n          _this.send(toSCXMLEvent(errorEvent, {\n            origin: id\n          }));\n        } catch (error) {\n          reportUnhandledExceptionOnInvocation(errorData, error, id);\n\n          if (_this.devTools) {\n            _this.devTools.send(errorEvent, _this.state);\n          }\n\n          if (_this.machine.strict) {\n            // it would be better to always stop the state machine if unhandled\n            // exception/promise rejection happens but because we don't want to\n            // break existing code so enforce it on strict mode only especially so\n            // because documentation says that onError is optional\n            _this.stop();\n          }\n        }\n      }\n    });\n    var actor = (_a = {\n      id: id,\n      send: function send() {\n        return void 0;\n      },\n      subscribe: function subscribe(next, handleError, complete) {\n        var observer = toObserver(next, handleError, complete);\n        var unsubscribed = false;\n        promise.then(function (response) {\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.next(response);\n\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.complete();\n        }, function (err) {\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.error(err);\n        });\n        return {\n          unsubscribe: function unsubscribe() {\n            return unsubscribed = true;\n          }\n        };\n      },\n      stop: function stop() {\n        canceled = true;\n      },\n      toJSON: function toJSON() {\n        return {\n          id: id\n        };\n      },\n      getSnapshot: function getSnapshot() {\n        return resolvedData;\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a);\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnCallback = function (callback, id) {\n    var _a;\n\n    var _this = this;\n\n    var canceled = false;\n    var receivers = new Set();\n    var listeners = new Set();\n    var emitted;\n\n    var receive = function receive(e) {\n      emitted = e;\n      listeners.forEach(function (listener) {\n        return listener(e);\n      });\n\n      if (canceled) {\n        return;\n      }\n\n      _this.send(toSCXMLEvent(e, {\n        origin: id\n      }));\n    };\n\n    var callbackStop;\n\n    try {\n      callbackStop = callback(receive, function (newListener) {\n        receivers.add(newListener);\n      });\n    } catch (err) {\n      this.send(error(id, err));\n    }\n\n    if (isPromiseLike(callbackStop)) {\n      // it turned out to be an async function, can't reliably check this before calling `callback`\n      // because transpiled async functions are not recognizable\n      return this.spawnPromise(callbackStop, id);\n    }\n\n    var actor = (_a = {\n      id: id,\n      send: function send(event) {\n        return receivers.forEach(function (receiver) {\n          return receiver(event);\n        });\n      },\n      subscribe: function subscribe(next) {\n        var observer = toObserver(next);\n        listeners.add(observer.next);\n        return {\n          unsubscribe: function unsubscribe() {\n            listeners.delete(observer.next);\n          }\n        };\n      },\n      stop: function stop() {\n        canceled = true;\n\n        if (isFunction(callbackStop)) {\n          callbackStop();\n        }\n      },\n      toJSON: function toJSON() {\n        return {\n          id: id\n        };\n      },\n      getSnapshot: function getSnapshot() {\n        return emitted;\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a);\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnObservable = function (source, id) {\n    var _a;\n\n    var _this = this;\n\n    var emitted;\n    var subscription = source.subscribe(function (value) {\n      emitted = value;\n\n      _this.send(toSCXMLEvent(value, {\n        origin: id\n      }));\n    }, function (err) {\n      _this.removeChild(id);\n\n      _this.send(toSCXMLEvent(error(id, err), {\n        origin: id\n      }));\n    }, function () {\n      _this.removeChild(id);\n\n      _this.send(toSCXMLEvent(doneInvoke(id), {\n        origin: id\n      }));\n    });\n    var actor = (_a = {\n      id: id,\n      send: function send() {\n        return void 0;\n      },\n      subscribe: function subscribe(next, handleError, complete) {\n        return source.subscribe(next, handleError, complete);\n      },\n      stop: function stop() {\n        return subscription.unsubscribe();\n      },\n      getSnapshot: function getSnapshot() {\n        return emitted;\n      },\n      toJSON: function toJSON() {\n        return {\n          id: id\n        };\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a);\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActor = function (actor, name) {\n    this.children.set(name, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActivity = function (activity) {\n    var implementation = this.machine.options && this.machine.options.activities ? this.machine.options.activities[activity.type] : undefined;\n\n    if (!implementation) {\n      if (!IS_PRODUCTION) {\n        warn(false, \"No implementation found for activity '\".concat(activity.type, \"'\"));\n      } // tslint:disable-next-line:no-console\n\n\n      return;\n    } // Start implementation\n\n\n    var dispose = implementation(this.state.context, activity);\n    this.spawnEffect(activity.id, dispose);\n  };\n\n  Interpreter.prototype.spawnEffect = function (id, dispose) {\n    var _a;\n\n    this.children.set(id, (_a = {\n      id: id,\n      send: function send() {\n        return void 0;\n      },\n      subscribe: function subscribe() {\n        return {\n          unsubscribe: function unsubscribe() {\n            return void 0;\n          }\n        };\n      },\n      stop: dispose || undefined,\n      getSnapshot: function getSnapshot() {\n        return undefined;\n      },\n      toJSON: function toJSON() {\n        return {\n          id: id\n        };\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a));\n  };\n\n  Interpreter.prototype.attachDev = function () {\n    var global = getGlobal();\n\n    if (this.options.devTools && global) {\n      if (global.__REDUX_DEVTOOLS_EXTENSION__) {\n        var devToolsOptions = typeof this.options.devTools === 'object' ? this.options.devTools : undefined;\n        this.devTools = global.__REDUX_DEVTOOLS_EXTENSION__.connect(__assign(__assign({\n          name: this.id,\n          autoPause: true,\n          stateSanitizer: function stateSanitizer(state) {\n            return {\n              value: state.value,\n              context: state.context,\n              actions: state.actions\n            };\n          }\n        }, devToolsOptions), {\n          features: __assign({\n            jump: false,\n            skip: false\n          }, devToolsOptions ? devToolsOptions.features : undefined)\n        }), this.machine);\n        this.devTools.init(this.state);\n      } // add XState-specific dev tooling hook\n\n\n      registerService(this);\n    }\n  };\n\n  Interpreter.prototype.toJSON = function () {\n    return {\n      id: this.id\n    };\n  };\n\n  Interpreter.prototype[symbolObservable] = function () {\n    return this;\n  };\n\n  Interpreter.prototype.getSnapshot = function () {\n    if (this.status === InterpreterStatus.NotStarted) {\n      return this.initialState;\n    }\n\n    return this._state;\n  };\n  /**\r\n   * The default interpreter options:\r\n   *\r\n   * - `clock` uses the global `setTimeout` and `clearTimeout` functions\r\n   * - `logger` uses the global `console.log()` method\r\n   */\n\n\n  Interpreter.defaultOptions = {\n    execute: true,\n    deferEvents: true,\n    clock: {\n      setTimeout: function (_setTimeout) {\n        function setTimeout(_x, _x2) {\n          return _setTimeout.apply(this, arguments);\n        }\n\n        setTimeout.toString = function () {\n          return _setTimeout.toString();\n        };\n\n        return setTimeout;\n      }(function (fn, ms) {\n        return setTimeout(fn, ms);\n      }),\n      clearTimeout: function (_clearTimeout) {\n        function clearTimeout(_x3) {\n          return _clearTimeout.apply(this, arguments);\n        }\n\n        clearTimeout.toString = function () {\n          return _clearTimeout.toString();\n        };\n\n        return clearTimeout;\n      }(function (id) {\n        return clearTimeout(id);\n      })\n    },\n    logger: /*#__PURE__*/console.log.bind(console),\n    devTools: false\n  };\n  Interpreter.interpret = interpret;\n  return Interpreter;\n}();\n\nvar resolveSpawnOptions = function resolveSpawnOptions(nameOrOptions) {\n  if (isString(nameOrOptions)) {\n    return __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n      name: nameOrOptions\n    });\n  }\n\n  return __assign(__assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n    name: uniqueId()\n  }), nameOrOptions);\n};\n\nfunction spawn(entity, nameOrOptions) {\n  var resolvedOptions = resolveSpawnOptions(nameOrOptions);\n  return consume(function (service) {\n    if (!IS_PRODUCTION) {\n      var isLazyEntity = isMachine(entity) || isFunction(entity);\n      warn(!!service || isLazyEntity, \"Attempted to spawn an Actor (ID: \\\"\".concat(isMachine(entity) ? entity.id : 'undefined', \"\\\") outside of a service. This will have no effect.\"));\n    }\n\n    if (service) {\n      return service.spawn(entity, resolvedOptions.name, resolvedOptions);\n    } else {\n      return createDeferredActor(entity, resolvedOptions.name);\n    }\n  });\n}\n/**\r\n * Creates a new Interpreter instance for the given machine with the provided options, if any.\r\n *\r\n * @param machine The machine to interpret\r\n * @param options Interpreter options\r\n */\n\n\nfunction interpret(machine, options) {\n  var interpreter = new Interpreter(machine, options);\n  return interpreter;\n}\n\nexport { Interpreter, InterpreterStatus, interpret, spawn };","map":{"version":3,"names":["__values","__spreadArray","__read","__assign","ActionTypes","SpecialTargets","isStateConfig","State","bindActionToState","errorPlatform","log","stop","start","cancel","send","update","error","error$1","doneInvoke","initEvent","getActionFunction","IS_PRODUCTION","warn","mapContext","isFunction","toSCXMLEvent","toInvokeSource","isMachine","isPromiseLike","isObservable","isBehavior","reportUnhandledExceptionOnInvocation","symbolObservable","isArray","toEventObject","isString","isActor","uniqueId","toObserver","Scheduler","isSpawnedActor","createDeferredActor","isInFinalState","registry","getGlobal","registerService","provide","consume","spawnBehavior","DEFAULT_SPAWN_OPTIONS","sync","autoForward","InterpreterStatus","Interpreter","machine","options","_this","defaultOptions","delayedEventsMap","listeners","Set","contextListeners","stopListeners","doneListeners","eventListeners","sendListeners","initialized","status","NotStarted","children","Map","forwardTo","init","event","payload","batch","state","_event","Stopped","concat","name","id","JSON","stringify","data","Running","deferEvents","Error","scheduler","schedule","forward","nextState","_state","sendTo","to","isParent","parent","Parent","target","get","undefined","type","origin","sessionId","resolvedOptions","clock","logger","resolvedId","bookId","Object","defineProperty","prototype","_initialState","initialState","enumerable","configurable","execute","actionsConfig","e_1","_a","_b","actions","_c","next","done","action","value","exec","e_1_1","return","call","e_2","e_3","e_4","e_5","_d","_sessionid","forEach","child","devTools","_e","_f","listener","e_2_1","_g","_h","e_3_1","_j","_k","contextListener","context","history","e_4_1","isDone","configuration","finalChildStateNode","find","sn","doneData","_l","_m","e_5_1","onTransition","add","subscribe","nextListenerOrObserver","_","completeListener","unsubscribe","resolvedCompleteListener","bind","complete","onDone","delete","onEvent","onSend","onChange","onStop","off","_init","register","resolvedState","resolveState","from","attachDev","initialize","e_6","e_7","e_8","e_9","e_10","e_6_1","e_7_1","e_8_1","_o","e_9_1","sort","a","b","order","stateNode","e_11","definition","exit","e_11_1","clear","_p","keys","_q","key","clearTimeout","e_10_1","free","events","length","e_12","batchChanged","batchedActions","_loop_1","event_1","transition","push","apply","map","changed","events_1","events_1_1","e_12_1","sender","indexOf","nextEvents","some","nextEvent","e_13","e_13_1","defer","sendAction","setTimeout","delay","sendId","actionFunctionMap","actionOrExec","err","activity","activities","Invoke","invokeSource","src","serviceCreator","services","resolvedData","source","meta","withContext","spawn","spawnActivity","stopChild","label","removeChild","childId","entity","spawnPromise","Promise","resolve","spawnCallback","spawnActor","spawnObservable","spawnMachine","childService","actor","set","doneEvent","behavior","actorRef","promise","canceled","then","response","errorData","errorEvent","strict","handleError","observer","unsubscribed","toJSON","getSnapshot","callback","receivers","emitted","receive","e","callbackStop","newListener","receiver","subscription","implementation","dispose","spawnEffect","global","__REDUX_DEVTOOLS_EXTENSION__","devToolsOptions","connect","autoPause","stateSanitizer","features","jump","skip","fn","ms","console","interpret","resolveSpawnOptions","nameOrOptions","service","isLazyEntity","interpreter"],"sources":["/project/xstate-getting-started/node_modules/xstate/es/interpreter.js"],"sourcesContent":["import { __values, __spreadArray, __read, __assign } from './_virtual/_tslib.js';\nimport { ActionTypes, SpecialTargets } from './types.js';\nimport { isStateConfig, State, bindActionToState } from './State.js';\nimport { errorPlatform, log, stop, start, cancel, send, update, error as error$1 } from './actionTypes.js';\nimport { doneInvoke, initEvent, getActionFunction, error } from './actions.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { warn, mapContext, isFunction, toSCXMLEvent, toInvokeSource, isMachine, isPromiseLike, isObservable, isBehavior, reportUnhandledExceptionOnInvocation, symbolObservable, isArray, toEventObject, isString, isActor, uniqueId, toObserver } from './utils.js';\nimport { Scheduler } from './scheduler.js';\nimport { isSpawnedActor, createDeferredActor } from './Actor.js';\nimport { isInFinalState } from './stateUtils.js';\nimport { registry } from './registry.js';\nimport { getGlobal, registerService } from './devTools.js';\nimport { provide, consume } from './serviceScope.js';\nimport { spawnBehavior } from './behaviors.js';\n\nvar DEFAULT_SPAWN_OPTIONS = {\n  sync: false,\n  autoForward: false\n};\nvar InterpreterStatus;\n\n(function (InterpreterStatus) {\n  InterpreterStatus[InterpreterStatus[\"NotStarted\"] = 0] = \"NotStarted\";\n  InterpreterStatus[InterpreterStatus[\"Running\"] = 1] = \"Running\";\n  InterpreterStatus[InterpreterStatus[\"Stopped\"] = 2] = \"Stopped\";\n})(InterpreterStatus || (InterpreterStatus = {}));\n\nvar Interpreter =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new Interpreter instance (i.e., service) for the given machine with the provided options, if any.\r\n   *\r\n   * @param machine The machine to be interpreted\r\n   * @param options Interpreter options\r\n   */\n  function Interpreter(machine, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = Interpreter.defaultOptions;\n    }\n\n    this.machine = machine;\n    this.delayedEventsMap = {};\n    this.listeners = new Set();\n    this.contextListeners = new Set();\n    this.stopListeners = new Set();\n    this.doneListeners = new Set();\n    this.eventListeners = new Set();\n    this.sendListeners = new Set();\n    /**\r\n     * Whether the service is started.\r\n     */\n\n    this.initialized = false;\n    this.status = InterpreterStatus.NotStarted;\n    this.children = new Map();\n    this.forwardTo = new Set();\n    /**\r\n     * Alias for Interpreter.prototype.start\r\n     */\n\n    this.init = this.start;\n    /**\r\n     * Sends an event to the running interpreter to trigger a transition.\r\n     *\r\n     * An array of events (batched) can be sent as well, which will send all\r\n     * batched events to the running interpreter. The listeners will be\r\n     * notified only **once** when all events are processed.\r\n     *\r\n     * @param event The event(s) to send\r\n     */\n\n    this.send = function (event, payload) {\n      if (isArray(event)) {\n        _this.batch(event);\n\n        return _this.state;\n      }\n\n      var _event = toSCXMLEvent(toEventObject(event, payload));\n\n      if (_this.status === InterpreterStatus.Stopped) {\n        // do nothing\n        if (!IS_PRODUCTION) {\n          warn(false, \"Event \\\"\".concat(_event.name, \"\\\" was sent to stopped service \\\"\").concat(_this.machine.id, \"\\\". This service has already reached its final state, and will not transition.\\nEvent: \").concat(JSON.stringify(_event.data)));\n        }\n\n        return _this.state;\n      }\n\n      if (_this.status !== InterpreterStatus.Running && !_this.options.deferEvents) {\n        throw new Error(\"Event \\\"\".concat(_event.name, \"\\\" was sent to uninitialized service \\\"\").concat(_this.machine.id // tslint:disable-next-line:max-line-length\n        , \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\\nEvent: \").concat(JSON.stringify(_event.data)));\n      }\n\n      _this.scheduler.schedule(function () {\n        // Forward copy of event to child actors\n        _this.forward(_event);\n\n        var nextState = _this.nextState(_event);\n\n        _this.update(nextState, _event);\n      });\n\n      return _this._state; // TODO: deprecate (should return void)\n      // tslint:disable-next-line:semicolon\n    };\n\n    this.sendTo = function (event, to) {\n      var isParent = _this.parent && (to === SpecialTargets.Parent || _this.parent.id === to);\n      var target = isParent ? _this.parent : isString(to) ? _this.children.get(to) || registry.get(to) : isActor(to) ? to : undefined;\n\n      if (!target) {\n        if (!isParent) {\n          throw new Error(\"Unable to send event to child '\".concat(to, \"' from service '\").concat(_this.id, \"'.\"));\n        } // tslint:disable-next-line:no-console\n\n\n        if (!IS_PRODUCTION) {\n          warn(false, \"Service '\".concat(_this.id, \"' has no parent: unable to send event \").concat(event.type));\n        }\n\n        return;\n      }\n\n      if ('machine' in target) {\n        // Send SCXML events to machines\n        target.send(__assign(__assign({}, event), {\n          name: event.name === error$1 ? \"\".concat(error(_this.id)) : event.name,\n          origin: _this.sessionId\n        }));\n      } else {\n        // Send normal events to other targets\n        target.send(event.data);\n      }\n    };\n\n    var resolvedOptions = __assign(__assign({}, Interpreter.defaultOptions), options);\n\n    var clock = resolvedOptions.clock,\n        logger = resolvedOptions.logger,\n        parent = resolvedOptions.parent,\n        id = resolvedOptions.id;\n    var resolvedId = id !== undefined ? id : machine.id;\n    this.id = resolvedId;\n    this.logger = logger;\n    this.clock = clock;\n    this.parent = parent;\n    this.options = resolvedOptions;\n    this.scheduler = new Scheduler({\n      deferEvents: this.options.deferEvents\n    });\n    this.sessionId = registry.bookId();\n  }\n\n  Object.defineProperty(Interpreter.prototype, \"initialState\", {\n    get: function () {\n      var _this = this;\n\n      if (this._initialState) {\n        return this._initialState;\n      }\n\n      return provide(this, function () {\n        _this._initialState = _this.machine.initialState;\n        return _this._initialState;\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Interpreter.prototype, \"state\", {\n    get: function () {\n      if (!IS_PRODUCTION) {\n        warn(this.status !== InterpreterStatus.NotStarted, \"Attempted to read state from uninitialized service '\".concat(this.id, \"'. Make sure the service is started first.\"));\n      }\n\n      return this._state;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Executes the actions of the given state, with that state's `context` and `event`.\r\n   *\r\n   * @param state The state whose actions will be executed\r\n   * @param actionsConfig The action implementations to use\r\n   */\n\n  Interpreter.prototype.execute = function (state, actionsConfig) {\n    var e_1, _a;\n\n    try {\n      for (var _b = __values(state.actions), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var action = _c.value;\n        this.exec(action, state, actionsConfig);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.update = function (state, _event) {\n    var e_2, _a, e_3, _b, e_4, _c, e_5, _d;\n\n    var _this = this; // Attach session ID to state\n\n\n    state._sessionid = this.sessionId; // Update state\n\n    this._state = state; // Execute actions\n\n    if (this.options.execute) {\n      this.execute(this.state);\n    } // Update children\n\n\n    this.children.forEach(function (child) {\n      _this.state.children[child.id] = child;\n    }); // Dev tools\n\n    if (this.devTools) {\n      this.devTools.send(_event.data, state);\n    } // Execute listeners\n\n\n    if (state.event) {\n      try {\n        for (var _e = __values(this.eventListeners), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var listener = _f.value;\n          listener(state.event);\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n\n    try {\n      for (var _g = __values(this.listeners), _h = _g.next(); !_h.done; _h = _g.next()) {\n        var listener = _h.value;\n        listener(state, state.event);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    try {\n      for (var _j = __values(this.contextListeners), _k = _j.next(); !_k.done; _k = _j.next()) {\n        var contextListener = _k.value;\n        contextListener(this.state.context, this.state.history ? this.state.history.context : undefined);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_k && !_k.done && (_c = _j.return)) _c.call(_j);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    var isDone = isInFinalState(state.configuration || [], this.machine);\n\n    if (this.state.configuration && isDone) {\n      // get final child state node\n      var finalChildStateNode = state.configuration.find(function (sn) {\n        return sn.type === 'final' && sn.parent === _this.machine;\n      });\n      var doneData = finalChildStateNode && finalChildStateNode.doneData ? mapContext(finalChildStateNode.doneData, state.context, _event) : undefined;\n\n      try {\n        for (var _l = __values(this.doneListeners), _m = _l.next(); !_m.done; _m = _l.next()) {\n          var listener = _m.value;\n          listener(doneInvoke(this.id, doneData));\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_m && !_m.done && (_d = _l.return)) _d.call(_l);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n\n      this.stop();\n    }\n  };\n  /*\r\n   * Adds a listener that is notified whenever a state transition happens. The listener is called with\r\n   * the next state and the event object that caused the state transition.\r\n   *\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onTransition = function (listener) {\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this.status === InterpreterStatus.Running) {\n      listener(this.state, this.state.event);\n    }\n\n    return this;\n  };\n\n  Interpreter.prototype.subscribe = function (nextListenerOrObserver, _, // TODO: error listener\n  completeListener) {\n    var _this = this;\n\n    if (!nextListenerOrObserver) {\n      return {\n        unsubscribe: function () {\n          return void 0;\n        }\n      };\n    }\n\n    var listener;\n    var resolvedCompleteListener = completeListener;\n\n    if (typeof nextListenerOrObserver === 'function') {\n      listener = nextListenerOrObserver;\n    } else {\n      listener = nextListenerOrObserver.next.bind(nextListenerOrObserver);\n      resolvedCompleteListener = nextListenerOrObserver.complete.bind(nextListenerOrObserver);\n    }\n\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this.status !== InterpreterStatus.NotStarted) {\n      listener(this.state);\n    }\n\n    if (resolvedCompleteListener) {\n      if (this.status === InterpreterStatus.Stopped) {\n        resolvedCompleteListener();\n      } else {\n        this.onDone(resolvedCompleteListener);\n      }\n    }\n\n    return {\n      unsubscribe: function () {\n        listener && _this.listeners.delete(listener);\n        resolvedCompleteListener && _this.doneListeners.delete(resolvedCompleteListener);\n      }\n    };\n  };\n  /**\r\n   * Adds an event listener that is notified whenever an event is sent to the running interpreter.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onEvent = function (listener) {\n    this.eventListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds an event listener that is notified whenever a `send` event occurs.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onSend = function (listener) {\n    this.sendListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a context listener that is notified whenever the state context changes.\r\n   * @param listener The context listener\r\n   */\n\n\n  Interpreter.prototype.onChange = function (listener) {\n    this.contextListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a listener that is notified when the machine is stopped.\r\n   * @param listener The listener\r\n   */\n\n\n  Interpreter.prototype.onStop = function (listener) {\n    this.stopListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a state listener that is notified when the statechart has reached its final state.\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onDone = function (listener) {\n    this.doneListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Removes a listener.\r\n   * @param listener The listener to remove\r\n   */\n\n\n  Interpreter.prototype.off = function (listener) {\n    this.listeners.delete(listener);\n    this.eventListeners.delete(listener);\n    this.sendListeners.delete(listener);\n    this.stopListeners.delete(listener);\n    this.doneListeners.delete(listener);\n    this.contextListeners.delete(listener);\n    return this;\n  };\n  /**\r\n   * Starts the interpreter from the given state, or the initial state.\r\n   * @param initialState The state to start the statechart from\r\n   */\n\n\n  Interpreter.prototype.start = function (initialState) {\n    var _this = this;\n\n    if (this.status === InterpreterStatus.Running) {\n      // Do not restart the service if it is already started\n      return this;\n    } // yes, it's a hack but we need the related cache to be populated for some things to work (like delayed transitions)\n    // this is usually called by `machine.getInitialState` but if we rehydrate from a state we might bypass this call\n    // we also don't want to call this method here as it resolves the full initial state which might involve calling assign actions\n    // and that could potentially lead to some unwanted side-effects (even such as creating some rogue actors)\n\n\n    this.machine._init();\n\n    registry.register(this.sessionId, this);\n    this.initialized = true;\n    this.status = InterpreterStatus.Running;\n    var resolvedState = initialState === undefined ? this.initialState : provide(this, function () {\n      return isStateConfig(initialState) ? _this.machine.resolveState(initialState) : _this.machine.resolveState(State.from(initialState, _this.machine.context));\n    });\n\n    if (this.options.devTools) {\n      this.attachDev();\n    }\n\n    this.scheduler.initialize(function () {\n      _this.update(resolvedState, initEvent);\n    });\n    return this;\n  };\n  /**\r\n   * Stops the interpreter and unsubscribe all listeners.\r\n   *\r\n   * This will also notify the `onStop` listeners.\r\n   */\n\n\n  Interpreter.prototype.stop = function () {\n    var e_6, _a, e_7, _b, e_8, _c, e_9, _d, e_10, _e;\n\n    var _this = this;\n\n    try {\n      for (var _f = __values(this.listeners), _g = _f.next(); !_g.done; _g = _f.next()) {\n        var listener = _g.value;\n        this.listeners.delete(listener);\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (_g && !_g.done && (_a = _f.return)) _a.call(_f);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    try {\n      for (var _h = __values(this.stopListeners), _j = _h.next(); !_j.done; _j = _h.next()) {\n        var listener = _j.value; // call listener, then remove\n\n        listener();\n        this.stopListeners.delete(listener);\n      }\n    } catch (e_7_1) {\n      e_7 = {\n        error: e_7_1\n      };\n    } finally {\n      try {\n        if (_j && !_j.done && (_b = _h.return)) _b.call(_h);\n      } finally {\n        if (e_7) throw e_7.error;\n      }\n    }\n\n    try {\n      for (var _k = __values(this.contextListeners), _l = _k.next(); !_l.done; _l = _k.next()) {\n        var listener = _l.value;\n        this.contextListeners.delete(listener);\n      }\n    } catch (e_8_1) {\n      e_8 = {\n        error: e_8_1\n      };\n    } finally {\n      try {\n        if (_l && !_l.done && (_c = _k.return)) _c.call(_k);\n      } finally {\n        if (e_8) throw e_8.error;\n      }\n    }\n\n    try {\n      for (var _m = __values(this.doneListeners), _o = _m.next(); !_o.done; _o = _m.next()) {\n        var listener = _o.value;\n        this.doneListeners.delete(listener);\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (_o && !_o.done && (_d = _m.return)) _d.call(_m);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    }\n\n    if (!this.initialized) {\n      // Interpreter already stopped; do nothing\n      return this;\n    }\n\n    __spreadArray([], __read(this.state.configuration), false).sort(function (a, b) {\n      return b.order - a.order;\n    }).forEach(function (stateNode) {\n      var e_11, _a;\n\n      try {\n        for (var _b = __values(stateNode.definition.exit), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var action = _c.value;\n\n          _this.exec(action, _this.state);\n        }\n      } catch (e_11_1) {\n        e_11 = {\n          error: e_11_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_11) throw e_11.error;\n        }\n      }\n    }); // Stop all children\n\n\n    this.children.forEach(function (child) {\n      if (isFunction(child.stop)) {\n        child.stop();\n      }\n    });\n    this.children.clear();\n\n    try {\n      // Cancel all delayed events\n      for (var _p = __values(Object.keys(this.delayedEventsMap)), _q = _p.next(); !_q.done; _q = _p.next()) {\n        var key = _q.value;\n        this.clock.clearTimeout(this.delayedEventsMap[key]);\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (_q && !_q.done && (_e = _p.return)) _e.call(_p);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    }\n\n    this.scheduler.clear();\n    this.scheduler = new Scheduler({\n      deferEvents: this.options.deferEvents\n    });\n    this.initialized = false;\n    this.status = InterpreterStatus.Stopped;\n    this._initialState = undefined;\n    registry.free(this.sessionId);\n    return this;\n  };\n\n  Interpreter.prototype.batch = function (events) {\n    var _this = this;\n\n    if (this.status === InterpreterStatus.NotStarted && this.options.deferEvents) {\n      // tslint:disable-next-line:no-console\n      if (!IS_PRODUCTION) {\n        warn(false, \"\".concat(events.length, \" event(s) were sent to uninitialized service \\\"\").concat(this.machine.id, \"\\\" and are deferred. Make sure .start() is called for this service.\\nEvent: \").concat(JSON.stringify(event)));\n      }\n    } else if (this.status !== InterpreterStatus.Running) {\n      throw new Error( // tslint:disable-next-line:max-line-length\n      \"\".concat(events.length, \" event(s) were sent to uninitialized service \\\"\").concat(this.machine.id, \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\"));\n    }\n\n    this.scheduler.schedule(function () {\n      var e_12, _a;\n\n      var nextState = _this.state;\n      var batchChanged = false;\n      var batchedActions = [];\n\n      var _loop_1 = function (event_1) {\n        var _event = toSCXMLEvent(event_1);\n\n        _this.forward(_event);\n\n        nextState = provide(_this, function () {\n          return _this.machine.transition(nextState, _event);\n        });\n        batchedActions.push.apply(batchedActions, __spreadArray([], __read(nextState.actions.map(function (a) {\n          return bindActionToState(a, nextState);\n        })), false));\n        batchChanged = batchChanged || !!nextState.changed;\n      };\n\n      try {\n        for (var events_1 = __values(events), events_1_1 = events_1.next(); !events_1_1.done; events_1_1 = events_1.next()) {\n          var event_1 = events_1_1.value;\n\n          _loop_1(event_1);\n        }\n      } catch (e_12_1) {\n        e_12 = {\n          error: e_12_1\n        };\n      } finally {\n        try {\n          if (events_1_1 && !events_1_1.done && (_a = events_1.return)) _a.call(events_1);\n        } finally {\n          if (e_12) throw e_12.error;\n        }\n      }\n\n      nextState.changed = batchChanged;\n      nextState.actions = batchedActions;\n\n      _this.update(nextState, toSCXMLEvent(events[events.length - 1]));\n    });\n  };\n  /**\r\n   * Returns a send function bound to this interpreter instance.\r\n   *\r\n   * @param event The event to be sent by the sender.\r\n   */\n\n\n  Interpreter.prototype.sender = function (event) {\n    return this.send.bind(this, event);\n  };\n  /**\r\n   * Returns the next state given the interpreter's current state and the event.\r\n   *\r\n   * This is a pure method that does _not_ update the interpreter's state.\r\n   *\r\n   * @param event The event to determine the next state\r\n   */\n\n\n  Interpreter.prototype.nextState = function (event) {\n    var _this = this;\n\n    var _event = toSCXMLEvent(event);\n\n    if (_event.name.indexOf(errorPlatform) === 0 && !this.state.nextEvents.some(function (nextEvent) {\n      return nextEvent.indexOf(errorPlatform) === 0;\n    })) {\n      throw _event.data.data;\n    }\n\n    var nextState = provide(this, function () {\n      return _this.machine.transition(_this.state, _event);\n    });\n    return nextState;\n  };\n\n  Interpreter.prototype.forward = function (event) {\n    var e_13, _a;\n\n    try {\n      for (var _b = __values(this.forwardTo), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var id = _c.value;\n        var child = this.children.get(id);\n\n        if (!child) {\n          throw new Error(\"Unable to forward event '\".concat(event, \"' from interpreter '\").concat(this.id, \"' to nonexistant child '\").concat(id, \"'.\"));\n        }\n\n        child.send(event);\n      }\n    } catch (e_13_1) {\n      e_13 = {\n        error: e_13_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_13) throw e_13.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.defer = function (sendAction) {\n    var _this = this;\n\n    this.delayedEventsMap[sendAction.id] = this.clock.setTimeout(function () {\n      if (sendAction.to) {\n        _this.sendTo(sendAction._event, sendAction.to);\n      } else {\n        _this.send(sendAction._event);\n      }\n    }, sendAction.delay);\n  };\n\n  Interpreter.prototype.cancel = function (sendId) {\n    this.clock.clearTimeout(this.delayedEventsMap[sendId]);\n    delete this.delayedEventsMap[sendId];\n  };\n\n  Interpreter.prototype.exec = function (action, state, actionFunctionMap) {\n    if (actionFunctionMap === void 0) {\n      actionFunctionMap = this.machine.options.actions;\n    }\n\n    var context = state.context,\n        _event = state._event;\n    var actionOrExec = action.exec || getActionFunction(action.type, actionFunctionMap);\n    var exec = isFunction(actionOrExec) ? actionOrExec : actionOrExec ? actionOrExec.exec : action.exec;\n\n    if (exec) {\n      try {\n        return exec(context, _event.data, {\n          action: action,\n          state: this.state,\n          _event: _event\n        });\n      } catch (err) {\n        if (this.parent) {\n          this.parent.send({\n            type: 'xstate.error',\n            data: err\n          });\n        }\n\n        throw err;\n      }\n    }\n\n    switch (action.type) {\n      case send:\n        var sendAction = action;\n\n        if (typeof sendAction.delay === 'number') {\n          this.defer(sendAction);\n          return;\n        } else {\n          if (sendAction.to) {\n            this.sendTo(sendAction._event, sendAction.to);\n          } else {\n            this.send(sendAction._event);\n          }\n        }\n\n        break;\n\n      case cancel:\n        this.cancel(action.sendId);\n        break;\n\n      case start:\n        {\n          if (this.status !== InterpreterStatus.Running) {\n            return;\n          }\n\n          var activity = action.activity; // If the activity will be stopped right after it's started\n          // (such as in transient states)\n          // don't bother starting the activity.\n\n          if (!this.state.activities[activity.id || activity.type]) {\n            break;\n          } // Invoked services\n\n\n          if (activity.type === ActionTypes.Invoke) {\n            var invokeSource = toInvokeSource(activity.src);\n            var serviceCreator = this.machine.options.services ? this.machine.options.services[invokeSource.type] : undefined;\n            var id = activity.id,\n                data = activity.data;\n\n            if (!IS_PRODUCTION) {\n              warn(!('forward' in activity), // tslint:disable-next-line:max-line-length\n              \"`forward` property is deprecated (found in invocation of '\".concat(activity.src, \"' in in machine '\").concat(this.machine.id, \"'). \") + \"Please use `autoForward` instead.\");\n            }\n\n            var autoForward = 'autoForward' in activity ? activity.autoForward : !!activity.forward;\n\n            if (!serviceCreator) {\n              // tslint:disable-next-line:no-console\n              if (!IS_PRODUCTION) {\n                warn(false, \"No service found for invocation '\".concat(activity.src, \"' in machine '\").concat(this.machine.id, \"'.\"));\n              }\n\n              return;\n            }\n\n            var resolvedData = data ? mapContext(data, context, _event) : undefined;\n\n            if (typeof serviceCreator === 'string') {\n              // TODO: warn\n              return;\n            }\n\n            var source = isFunction(serviceCreator) ? serviceCreator(context, _event.data, {\n              data: resolvedData,\n              src: invokeSource,\n              meta: activity.meta\n            }) : serviceCreator;\n\n            if (!source) {\n              // TODO: warn?\n              return;\n            }\n\n            var options = void 0;\n\n            if (isMachine(source)) {\n              source = resolvedData ? source.withContext(resolvedData) : source;\n              options = {\n                autoForward: autoForward\n              };\n            }\n\n            this.spawn(source, id, options);\n          } else {\n            this.spawnActivity(activity);\n          }\n\n          break;\n        }\n\n      case stop:\n        {\n          this.stopChild(action.activity.id);\n          break;\n        }\n\n      case log:\n        var label = action.label,\n            value = action.value;\n\n        if (label) {\n          this.logger(label, value);\n        } else {\n          this.logger(value);\n        }\n\n        break;\n\n      default:\n        if (!IS_PRODUCTION) {\n          warn(false, \"No implementation found for action type '\".concat(action.type, \"'\"));\n        }\n\n        break;\n    }\n\n    return undefined;\n  };\n\n  Interpreter.prototype.removeChild = function (childId) {\n    var _a;\n\n    this.children.delete(childId);\n    this.forwardTo.delete(childId); // this.state might not exist at the time this is called,\n    // such as when a child is added then removed while initializing the state\n\n    (_a = this.state) === null || _a === void 0 ? true : delete _a.children[childId];\n  };\n\n  Interpreter.prototype.stopChild = function (childId) {\n    var child = this.children.get(childId);\n\n    if (!child) {\n      return;\n    }\n\n    this.removeChild(childId);\n\n    if (isFunction(child.stop)) {\n      child.stop();\n    }\n  };\n\n  Interpreter.prototype.spawn = function (entity, name, options) {\n    if (isPromiseLike(entity)) {\n      return this.spawnPromise(Promise.resolve(entity), name);\n    } else if (isFunction(entity)) {\n      return this.spawnCallback(entity, name);\n    } else if (isSpawnedActor(entity)) {\n      return this.spawnActor(entity, name);\n    } else if (isObservable(entity)) {\n      return this.spawnObservable(entity, name);\n    } else if (isMachine(entity)) {\n      return this.spawnMachine(entity, __assign(__assign({}, options), {\n        id: name\n      }));\n    } else if (isBehavior(entity)) {\n      return this.spawnBehavior(entity, name);\n    } else {\n      throw new Error(\"Unable to spawn entity \\\"\".concat(name, \"\\\" of type \\\"\").concat(typeof entity, \"\\\".\"));\n    }\n  };\n\n  Interpreter.prototype.spawnMachine = function (machine, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var childService = new Interpreter(machine, __assign(__assign({}, this.options), {\n      parent: this,\n      id: options.id || machine.id\n    }));\n\n    var resolvedOptions = __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), options);\n\n    if (resolvedOptions.sync) {\n      childService.onTransition(function (state) {\n        _this.send(update, {\n          state: state,\n          id: childService.id\n        });\n      });\n    }\n\n    var actor = childService;\n    this.children.set(childService.id, actor);\n\n    if (resolvedOptions.autoForward) {\n      this.forwardTo.add(childService.id);\n    }\n\n    childService.onDone(function (doneEvent) {\n      _this.removeChild(childService.id);\n\n      _this.send(toSCXMLEvent(doneEvent, {\n        origin: childService.id\n      }));\n    }).start();\n    return actor;\n  };\n\n  Interpreter.prototype.spawnBehavior = function (behavior, id) {\n    var actorRef = spawnBehavior(behavior, {\n      id: id,\n      parent: this\n    });\n    this.children.set(id, actorRef);\n    return actorRef;\n  };\n\n  Interpreter.prototype.spawnPromise = function (promise, id) {\n    var _a;\n\n    var _this = this;\n\n    var canceled = false;\n    var resolvedData;\n    promise.then(function (response) {\n      if (!canceled) {\n        resolvedData = response;\n\n        _this.removeChild(id);\n\n        _this.send(toSCXMLEvent(doneInvoke(id, response), {\n          origin: id\n        }));\n      }\n    }, function (errorData) {\n      if (!canceled) {\n        _this.removeChild(id);\n\n        var errorEvent = error(id, errorData);\n\n        try {\n          // Send \"error.platform.id\" to this (parent).\n          _this.send(toSCXMLEvent(errorEvent, {\n            origin: id\n          }));\n        } catch (error) {\n          reportUnhandledExceptionOnInvocation(errorData, error, id);\n\n          if (_this.devTools) {\n            _this.devTools.send(errorEvent, _this.state);\n          }\n\n          if (_this.machine.strict) {\n            // it would be better to always stop the state machine if unhandled\n            // exception/promise rejection happens but because we don't want to\n            // break existing code so enforce it on strict mode only especially so\n            // because documentation says that onError is optional\n            _this.stop();\n          }\n        }\n      }\n    });\n    var actor = (_a = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        var observer = toObserver(next, handleError, complete);\n        var unsubscribed = false;\n        promise.then(function (response) {\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.next(response);\n\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.complete();\n        }, function (err) {\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.error(err);\n        });\n        return {\n          unsubscribe: function () {\n            return unsubscribed = true;\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      },\n      getSnapshot: function () {\n        return resolvedData;\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a);\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnCallback = function (callback, id) {\n    var _a;\n\n    var _this = this;\n\n    var canceled = false;\n    var receivers = new Set();\n    var listeners = new Set();\n    var emitted;\n\n    var receive = function (e) {\n      emitted = e;\n      listeners.forEach(function (listener) {\n        return listener(e);\n      });\n\n      if (canceled) {\n        return;\n      }\n\n      _this.send(toSCXMLEvent(e, {\n        origin: id\n      }));\n    };\n\n    var callbackStop;\n\n    try {\n      callbackStop = callback(receive, function (newListener) {\n        receivers.add(newListener);\n      });\n    } catch (err) {\n      this.send(error(id, err));\n    }\n\n    if (isPromiseLike(callbackStop)) {\n      // it turned out to be an async function, can't reliably check this before calling `callback`\n      // because transpiled async functions are not recognizable\n      return this.spawnPromise(callbackStop, id);\n    }\n\n    var actor = (_a = {\n      id: id,\n      send: function (event) {\n        return receivers.forEach(function (receiver) {\n          return receiver(event);\n        });\n      },\n      subscribe: function (next) {\n        var observer = toObserver(next);\n        listeners.add(observer.next);\n        return {\n          unsubscribe: function () {\n            listeners.delete(observer.next);\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n\n        if (isFunction(callbackStop)) {\n          callbackStop();\n        }\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      },\n      getSnapshot: function () {\n        return emitted;\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a);\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnObservable = function (source, id) {\n    var _a;\n\n    var _this = this;\n\n    var emitted;\n    var subscription = source.subscribe(function (value) {\n      emitted = value;\n\n      _this.send(toSCXMLEvent(value, {\n        origin: id\n      }));\n    }, function (err) {\n      _this.removeChild(id);\n\n      _this.send(toSCXMLEvent(error(id, err), {\n        origin: id\n      }));\n    }, function () {\n      _this.removeChild(id);\n\n      _this.send(toSCXMLEvent(doneInvoke(id), {\n        origin: id\n      }));\n    });\n    var actor = (_a = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        return source.subscribe(next, handleError, complete);\n      },\n      stop: function () {\n        return subscription.unsubscribe();\n      },\n      getSnapshot: function () {\n        return emitted;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a);\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActor = function (actor, name) {\n    this.children.set(name, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActivity = function (activity) {\n    var implementation = this.machine.options && this.machine.options.activities ? this.machine.options.activities[activity.type] : undefined;\n\n    if (!implementation) {\n      if (!IS_PRODUCTION) {\n        warn(false, \"No implementation found for activity '\".concat(activity.type, \"'\"));\n      } // tslint:disable-next-line:no-console\n\n\n      return;\n    } // Start implementation\n\n\n    var dispose = implementation(this.state.context, activity);\n    this.spawnEffect(activity.id, dispose);\n  };\n\n  Interpreter.prototype.spawnEffect = function (id, dispose) {\n    var _a;\n\n    this.children.set(id, (_a = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function () {\n        return {\n          unsubscribe: function () {\n            return void 0;\n          }\n        };\n      },\n      stop: dispose || undefined,\n      getSnapshot: function () {\n        return undefined;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a));\n  };\n\n  Interpreter.prototype.attachDev = function () {\n    var global = getGlobal();\n\n    if (this.options.devTools && global) {\n      if (global.__REDUX_DEVTOOLS_EXTENSION__) {\n        var devToolsOptions = typeof this.options.devTools === 'object' ? this.options.devTools : undefined;\n        this.devTools = global.__REDUX_DEVTOOLS_EXTENSION__.connect(__assign(__assign({\n          name: this.id,\n          autoPause: true,\n          stateSanitizer: function (state) {\n            return {\n              value: state.value,\n              context: state.context,\n              actions: state.actions\n            };\n          }\n        }, devToolsOptions), {\n          features: __assign({\n            jump: false,\n            skip: false\n          }, devToolsOptions ? devToolsOptions.features : undefined)\n        }), this.machine);\n        this.devTools.init(this.state);\n      } // add XState-specific dev tooling hook\n\n\n      registerService(this);\n    }\n  };\n\n  Interpreter.prototype.toJSON = function () {\n    return {\n      id: this.id\n    };\n  };\n\n  Interpreter.prototype[symbolObservable] = function () {\n    return this;\n  };\n\n  Interpreter.prototype.getSnapshot = function () {\n    if (this.status === InterpreterStatus.NotStarted) {\n      return this.initialState;\n    }\n\n    return this._state;\n  };\n  /**\r\n   * The default interpreter options:\r\n   *\r\n   * - `clock` uses the global `setTimeout` and `clearTimeout` functions\r\n   * - `logger` uses the global `console.log()` method\r\n   */\n\n\n  Interpreter.defaultOptions = {\n    execute: true,\n    deferEvents: true,\n    clock: {\n      setTimeout: function (fn, ms) {\n        return setTimeout(fn, ms);\n      },\n      clearTimeout: function (id) {\n        return clearTimeout(id);\n      }\n    },\n    logger: /*#__PURE__*/console.log.bind(console),\n    devTools: false\n  };\n  Interpreter.interpret = interpret;\n  return Interpreter;\n}();\n\nvar resolveSpawnOptions = function (nameOrOptions) {\n  if (isString(nameOrOptions)) {\n    return __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n      name: nameOrOptions\n    });\n  }\n\n  return __assign(__assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n    name: uniqueId()\n  }), nameOrOptions);\n};\n\nfunction spawn(entity, nameOrOptions) {\n  var resolvedOptions = resolveSpawnOptions(nameOrOptions);\n  return consume(function (service) {\n    if (!IS_PRODUCTION) {\n      var isLazyEntity = isMachine(entity) || isFunction(entity);\n      warn(!!service || isLazyEntity, \"Attempted to spawn an Actor (ID: \\\"\".concat(isMachine(entity) ? entity.id : 'undefined', \"\\\") outside of a service. This will have no effect.\"));\n    }\n\n    if (service) {\n      return service.spawn(entity, resolvedOptions.name, resolvedOptions);\n    } else {\n      return createDeferredActor(entity, resolvedOptions.name);\n    }\n  });\n}\n/**\r\n * Creates a new Interpreter instance for the given machine with the provided options, if any.\r\n *\r\n * @param machine The machine to interpret\r\n * @param options Interpreter options\r\n */\n\nfunction interpret(machine, options) {\n  var interpreter = new Interpreter(machine, options);\n  return interpreter;\n}\n\nexport { Interpreter, InterpreterStatus, interpret, spawn };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}