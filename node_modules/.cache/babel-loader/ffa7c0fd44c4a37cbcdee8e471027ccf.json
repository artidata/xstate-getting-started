{"ast":null,"code":"import _slicedToArray from \"/project/xstate-getting-started/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/project/xstate-getting-started/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useMachine } from \"@xstate/react\";\nimport { createMachine } from \"xstate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar promiseMachine = createMachine({\n  id: \"promise\",\n  initial: \"pending\",\n  states: {\n    pending: {\n      on: {\n        RESOLVE: {\n          target: \"resolved\"\n        },\n        REJECT: {\n          target: \"rejected\"\n        }\n      }\n    },\n    resolved: {\n      type: \"final\"\n    },\n    rejected: {\n      type: \"final\"\n    }\n  }\n});\nexport default function App() {\n  _s();\n\n  var _useMachine = useMachine(promiseMachine),\n      _useMachine2 = _slicedToArray(_useMachine, 2),\n      state = _useMachine2[0],\n      send = _useMachine2[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [state.matches(\"pending\") && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 36\n    }, this), state.matches(\"rejected\") && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Promise Rejected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 37\n    }, this), state.matches(\"resolved\") && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Promise Resolved\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return send(\"RESOLVE\");\n        },\n        children: \"Resolve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return send(\"REJECT\");\n        },\n        children: \"Reject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JVZoiky6zIyU73HZ029PEtS3QOI=\", false, function () {\n  return [useMachine];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useMachine","createMachine","promiseMachine","id","initial","states","pending","on","RESOLVE","target","REJECT","resolved","type","rejected","App","state","send","matches"],"sources":["/project/xstate-getting-started/src/App.js"],"sourcesContent":["import { useMachine } from \"@xstate/react\";\nimport { createMachine } from \"xstate\";\n\nconst promiseMachine = createMachine({\n  id: \"promise\",\n  initial: \"pending\",\n  states: {\n    pending: {\n      on: {\n        RESOLVE: { target: \"resolved\" },\n        REJECT: { target: \"rejected\" }\n      }\n    },\n    resolved: {\n      type: \"final\"\n    },\n    rejected: {\n      type: \"final\"\n    }\n  }\n});\n\nexport default function App() {\n  const [state, send] = useMachine(promiseMachine);\n\n  return (\n    <div>\n      {/** You can listen to what state the service is in */}\n      {state.matches(\"pending\") && <p>Loading...</p>}\n      {state.matches(\"rejected\") && <p>Promise Rejected</p>}\n      {state.matches(\"resolved\") && <p>Promise Resolved</p>}\n      <div>\n        {/** You can send events to the running service */}\n        <button onClick={() => send(\"RESOLVE\")}>Resolve</button>\n        <button onClick={() => send(\"REJECT\")}>Reject</button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;;;;AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,aAAT,QAA8B,QAA9B;;AAEA,IAAMC,cAAc,GAAGD,aAAa,CAAC;EACnCE,EAAE,EAAE,SAD+B;EAEnCC,OAAO,EAAE,SAF0B;EAGnCC,MAAM,EAAE;IACNC,OAAO,EAAE;MACPC,EAAE,EAAE;QACFC,OAAO,EAAE;UAAEC,MAAM,EAAE;QAAV,CADP;QAEFC,MAAM,EAAE;UAAED,MAAM,EAAE;QAAV;MAFN;IADG,CADH;IAONE,QAAQ,EAAE;MACRC,IAAI,EAAE;IADE,CAPJ;IAUNC,QAAQ,EAAE;MACRD,IAAI,EAAE;IADE;EAVJ;AAH2B,CAAD,CAApC;AAmBA,eAAe,SAASE,GAAT,GAAe;EAAA;;EAC5B,kBAAsBd,UAAU,CAACE,cAAD,CAAhC;EAAA;EAAA,IAAOa,KAAP;EAAA,IAAcC,IAAd;;EAEA,oBACE;IAAA,WAEGD,KAAK,CAACE,OAAN,CAAc,SAAd,kBAA4B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAF/B,EAGGF,KAAK,CAACE,OAAN,CAAc,UAAd,kBAA6B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHhC,EAIGF,KAAK,CAACE,OAAN,CAAc,UAAd,kBAA6B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJhC,eAKE;MAAA,wBAEE;QAAQ,OAAO,EAAE;UAAA,OAAMD,IAAI,CAAC,SAAD,CAAV;QAAA,CAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAQ,OAAO,EAAE;UAAA,OAAMA,IAAI,CAAC,QAAD,CAAV;QAAA,CAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;;GAhBuBF,G;UACAd,U;;;KADAc,G"},"metadata":{},"sourceType":"module"}